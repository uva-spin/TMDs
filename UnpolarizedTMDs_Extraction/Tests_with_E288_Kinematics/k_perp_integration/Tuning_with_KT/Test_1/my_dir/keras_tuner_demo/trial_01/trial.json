{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units_0", "default": null, "conditions": [], "min_value": 4, "max_value": 240, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_0", "default": "relu", "conditions": [], "values": ["relu", "relu6", "tanh", "selu", "sigmoid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.001, 0.0001, 1e-05], "ordered": true}}, {"class_name": "Int", "config": {"name": "units_1", "default": null, "conditions": [], "min_value": 4, "max_value": 240, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_1", "default": "relu", "conditions": [], "values": ["relu", "relu6", "tanh", "selu", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units_2", "default": null, "conditions": [], "min_value": 4, "max_value": 240, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_2", "default": "relu", "conditions": [], "values": ["relu", "relu6", "tanh", "selu", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units_3", "default": null, "conditions": [], "min_value": 4, "max_value": 240, "step": 4, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_3", "default": "relu", "conditions": [], "values": ["relu", "relu6", "tanh", "selu", "sigmoid"], "ordered": false}}], "values": {"num_layers": 4, "units_0": 12, "activation_0": "sigmoid", "learning_rate": 1e-05, "units_1": 232, "activation_1": "tanh", "units_2": 184, "activation_2": "selu", "units_3": 148, "activation_3": "selu"}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/home/ishara/anaconda3/envs/dnn-cffs-env/lib/python3.8/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/ishara/anaconda3/envs/dnn-cffs-env/lib/python3.8/site-packages/keras_tuner/src/engine/base_tuner.py\", line 265, in _run_and_update_trial\n    tuner_utils.convert_to_metrics_dict(\n  File \"/home/ishara/anaconda3/envs/dnn-cffs-env/lib/python3.8/site-packages/keras_tuner/src/engine/tuner_utils.py\", line 132, in convert_to_metrics_dict\n    [convert_to_metrics_dict(elem, objective) for elem in results]\n  File \"/home/ishara/anaconda3/envs/dnn-cffs-env/lib/python3.8/site-packages/keras_tuner/src/engine/tuner_utils.py\", line 132, in <listcomp>\n    [convert_to_metrics_dict(elem, objective) for elem in results]\n  File \"/home/ishara/anaconda3/envs/dnn-cffs-env/lib/python3.8/site-packages/keras_tuner/src/engine/tuner_utils.py\", line 145, in convert_to_metrics_dict\n    best_value, _ = _get_best_value_and_best_epoch_from_history(\n  File \"/home/ishara/anaconda3/envs/dnn-cffs-env/lib/python3.8/site-packages/keras_tuner/src/engine/tuner_utils.py\", line 116, in _get_best_value_and_best_epoch_from_history\n    objective_value = objective.get_value(metrics)\n  File \"/home/ishara/anaconda3/envs/dnn-cffs-env/lib/python3.8/site-packages/keras_tuner/src/engine/objective.py\", line 59, in get_value\n    return logs[self.name]\nKeyError: 'mean_squared_error'\n"}